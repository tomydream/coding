段页的管理机制
https://zhuanlan.zhihu.com/p/152119007


额外的介绍
https://zhuanlan.zhihu.com/p/26137521


在Linux中，每个进程都有属于自己的进程控制块（PCB）和地址空间（Addr Space），
并且都有一个与之对应的页表，
负责将进程的虚拟地址与物理地址进行映射，通过内存管理单元（MMU）进行管理。
两个不同的虚拟地址通过页表映射到物理空间的同一区域，它们所指向的这块区域即共享内存。


当使用mmap映射文件到进程后,就可以直接操作这段虚拟地址进行文件的读写等操作,
不必再调用read,write等系统调用.但需注意,直接对该段内存写时不会写入超过当前文件大小的内容.

采用共享内存通信的一个显而易见的好处是效率高，因为进程可以直接读写内存，而不需要任何数据的拷贝。
对于像管道和消息队列等通信方式，则需要在内核和用户空间进行四次的数据拷贝，而共享内存则只拷贝两次数据：
一次从输入文件到共享内存区，另一次从共享内存区到输出文件。实际上，进程之间在共享内存时，并不总是读写少量数据后就解除映射，
有新的通信时，再重新建立共享内存区域。而是保持共享区域，直到通信完毕为止，这样，数据内容一直保存在共享内存中，并没有写回文件。
共享内存中的内容往往是在解除映射时才写回文件的。因此，采用共享内存的通信方式效率是非常高的。  

https://zhuanlan.zhihu.com/p/254883122
